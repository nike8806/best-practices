import React, { Component } from 'react';
import PropTypes from 'prop-types';

/**
 * Notification Component
 *
 * @todo Consider export a method that returns and instance of this component.
 * @todo Consider internally manage general error/success messages
 */
class Notification extends Component {
  static propTypes = {
    level: PropTypes.oneOf(['success', 'error']).isRequired,
    message: PropTypes.string.isRequired,
    delay: PropTypes.number,
    className: PropTypes.string
  };

  // Setting the default options
  static defaultProps = {
    className: '' // Values: notification-box-plain
  }

  state = { visible: true };

  /**
   * Set Timer on first time mount
   */
  componentDidMount() {
    this._setTimer();
  }

  /**
   * Props updated from outside
   */
  componentWillReceiveProps() {
    this.setState({ visible: true });
    this._setTimer();
  }

  /**
   * Removed from outside
   */
  componentWillUnmount() {
    clearTimeout(this._timer);
  }

  /**
   * If the case, set timer for auto-hide
   *
   * @private
   */
  _setTimer() {
    const DELAY = this.props.delay || 0;

    if (this._timer) {
      clearTimeout(this._timer);
    }

    if (DELAY <= 0) {
      // Only dismiss if it's a valid time value
      return;
    }

    this._timer = setTimeout(() => {
      this.setState({ visible: false });
      clearTimeout(this._timer);
    }, DELAY * 1000);
  }

  /**
   * Render method
   *
   * @return {ReactElement}
   */
  render() {
    const level = this.props.level;
    const className = this.props.className;
    const message = this.props.message;

    return !this.state.visible ? null : (
      <div className={ `notication-box clearfix ${className}` }>
        <div className={ `alert content-padding clearfix alert-${level}` }>
          <span className={ `icon pull-left icon-form-${level}` } />
          <div className="notification-message" dangerouslySetInnerHTML={{ __html: message }} />
        </div>
      </div>
    );
  }
}

export default Notification;
