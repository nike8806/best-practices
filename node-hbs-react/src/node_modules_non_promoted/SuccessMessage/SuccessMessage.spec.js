import React from 'react';
import Enzyme, { mount } from 'enzyme';
import SuccessMessage from './SuccessMessage';

// TODO: Put this configuration in just one place
import Adapter from 'enzyme-adapter-react-16';
Enzyme.configure({ adapter: new Adapter() });

const DEFAULT_TITLE_MESSAGE = 'Thank you for completing this task.';

describe('<SuccessMessage />', () => {
  it('displays success-message__title when only `title` is specified.', () => {
    const wrapper = mount(<SuccessMessage title="I'm a title" />);

    const title = wrapper.find('h2.success-message__title');
    expect(title.exists()).toEqual(true);
    expect(title.text()).toBe('I\'m a title');

    const p = wrapper.find('p');
    expect(p.exists()).toEqual(false);

    const div = wrapper.find('div.success-message__success-icon');
    expect(div.exists()).toEqual(false);

    expect(wrapper).toMatchSnapshot();
  });

  it('displays success-message__title when `title` is not specified.', () => {
    const wrapper = mount(<SuccessMessage />);

    const title = wrapper.find('h2.success-message__title');
    expect(title.exists()).toEqual(true);
    expect(title.text()).toBe(DEFAULT_TITLE_MESSAGE);

    const p = wrapper.find('p.success-message__subtitle');
    expect(p.exists()).toEqual(false);

    const div = wrapper.find('div.success-message__success-icon');
    expect(div.exists()).toEqual(false);

    expect(wrapper).toMatchSnapshot();
  });

  it('displays success-message__subtitle when `subtitle` is specified.', () => {
    const wrapper = mount(<SuccessMessage subtitle="I'm a subtitle" />);

    const title = wrapper.find('h2.success-message__title');
    expect(title.exists()).toEqual(true);
    expect(title.text()).toBe(DEFAULT_TITLE_MESSAGE);

    const p = wrapper.find('p.success-message__subtitle');
    expect(p.exists()).toEqual(true);
    expect(p.text()).toBe('I\'m a subtitle');

    const div = wrapper.find('div.success-message__success-icon');
    expect(div.exists()).toEqual(false);

    expect(wrapper).toMatchSnapshot();
  });

  it('displays success-message__success-icon when `withIcon` is specified to true.', () => {
    const wrapper = mount(<SuccessMessage withIcon />);

    const title = wrapper.find('h2.success-message__title');
    expect(title.exists()).toEqual(true);
    expect(title.text()).toBe(DEFAULT_TITLE_MESSAGE);

    const p = wrapper.find('p.success-message__subtitle');
    expect(p.exists()).toEqual(false);

    const div = wrapper.find('div.success-message__success-icon');
    expect(div.exists()).toEqual(true);

    expect(wrapper).toMatchSnapshot();
  });

  it('joins a className to success-message__container when `className` is specified.', () => {
    const wrapper = mount(<SuccessMessage className="new-class" />);

    const containerDiv = wrapper.find('div.success-message__container.new-class');
    expect(containerDiv.exists()).toEqual(true);

    const title = wrapper.find('h2.success-message__title');
    expect(title.exists()).toEqual(true);
    expect(title.text()).toBe(DEFAULT_TITLE_MESSAGE);

    const p = wrapper.find('p.success-message__subtitle');
    expect(p.exists()).toEqual(false);

    const div = wrapper.find('div.success-message__success-icon');
    expect(div.exists()).toEqual(false);

    expect(wrapper).toMatchSnapshot();
  });

});
